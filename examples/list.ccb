// This is my linked list!
let map(f : Int -> Int, list : List) : List =
    match list with
    | []      => []
    | x :: xs => f(x) :: map(f, xs)

let squareList(list) = map(fun(x) => x * x, list)

let exampleList : List = 1 :: 2 :: []

let squaredExampleList = squareList(exampleList)
